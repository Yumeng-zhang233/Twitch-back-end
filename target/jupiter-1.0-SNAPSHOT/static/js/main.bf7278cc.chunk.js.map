{"version":3,"sources":["utils.js","components/Login.js","components/Register.js","components/Favorites.js","components/CustomSearch.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_ORIGIN","loginUrl","login","data","fetch","method","headers","credentials","body","JSON","stringify","then","response","status","Error","json","registerUrl","register","logoutUrl","logout","topGamesUrl","getTopGames","getGameDetailsUrl","searchGameByIdUrl","searchGameById","gameId","searchGameByName","gameName","getGameDetails","id","favoriteItemUrl","getFavoriteItem","getRecommendedItemsUrl","getRecommendations","Login","state","displayModal","handleCancel","setState","signinOnClick","onFinish","message","success","name","props","onSuccess","catch","err","error","render","shape","onClick","style","marginRight","title","visible","onCancel","footer","destroyOnClose","preserve","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType","React","Component","Register","signupOnClick","initialValues","remember","SubMenu","Menu","MenuKey","Favorites","displayDrawer","onDrawerClose","onFavoriteClick","VIDEO","STREAM","CLIP","icon","StarFilled","placement","width","onClose","mode","defaultOpenKeys","height","borderRight","selectable","EyeOutlined","map","item","href","url","target","rel","broadcaster_name","YoutubeOutlined","VideoCameraOutlined","CustomSearch","searchOnClick","onSubmit","game_name","SearchOutlined","marginLeft","marginTop","TabPane","Tabs","tabKeys","renderCardTitle","loggedIn","favs","favOnChange","isFav","find","fav","StarOutlined","favItem","favorite","addFavoriteItem","overflow","textOverflow","renderCardGrid","grid","xs","sm","md","lg","xl","dataSource","renderItem","alt","src","thumbnail_url","replace","Home","resources","favoriteItems","favoriteOnChange","favVideos","favStreams","favClips","defaultActiveKey","tab","forceRender","Header","Layout","Content","Sider","App","topGames","onGameSelect","key","customSearchOnSuccess","signinOnSuccess","signoutOnClick","componentDidMount","justify","display","className","onSelect","LikeOutlined","FireOutlined","game","box_art_url","borderRadius","padding","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"mTAAMA,EAAgB,GAEhBC,EAAQ,UAAMD,EAAN,UAEDE,EAAQ,SAACC,GAElB,OAAOC,MAAMH,EAAU,CACnBI,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,YAAa,UACbC,KAAMC,KAAKC,UAAUP,KACtBQ,MAAK,SAACC,GAEL,GAAwB,MAApBA,EAASC,OACT,MAAMC,MAAM,kBAGhB,OAAOF,EAASG,WAGlBC,EAAW,UAAMhB,EAAN,aACJiB,EAAW,SAACd,GACrB,OAAOC,MAAOY,EAAY,CACtBX,OAAO,OACPC,QAAQ,CACJ,eAAgB,oBAEpBE,KAAKC,KAAKC,UAAUP,KACrBQ,MAAK,SAACC,GACL,GAAuB,MAApBA,EAASC,OACR,MAAMC,MAAM,wBAIlBI,EAAS,UAAMlB,EAAN,WAEFmB,EAAS,WAClB,OAAOf,MAAMc,EAAW,CACpBb,OAAQ,OACRE,YAAa,YACdI,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,OACT,MAAMC,MAAM,uBAIlBM,EAAW,UAAMpB,EAAN,SAEJqB,EAAc,WACvB,OAAOjB,MAAMgB,GAAaT,MAAK,SAACC,GAC5B,GAAwB,MAApBA,EAASC,OACT,MAAMC,MAAM,yBAGhB,OAAOF,EAASG,WAIlBO,EAAiB,UAAMtB,EAAN,oBAWjBuB,EAAiB,UAAMvB,EAAN,oBAEVwB,EAAiB,SAACC,GAC3B,OAAOrB,MAAM,GAAD,OAAImB,GAAJ,OAAwBE,IAAUd,MAAK,SAACC,GAChD,GAAwB,MAApBA,EAASC,OACT,MAAMC,MAAM,yBAEhB,OAAOF,EAASG,WAGXW,EAAmB,SAACC,GAC7B,OApBmB,SAACA,GACpB,OAAOvB,MAAM,GAAD,OAAIkB,GAAJ,OAAwBK,IAAYhB,MAAK,SAACC,GAClD,GAAwB,MAApBA,EAASC,OACT,MAAMC,MAAM,yBAGhB,OAAOF,EAASG,UAcba,CAAeD,GAAUhB,MAAK,SAACR,GAClC,GAAIA,GAAQA,EAAK0B,GACb,OAAOL,EAAerB,EAAK0B,IAG/B,MAAMf,MAAM,6BAIdgB,EAAe,UAAM9B,EAAN,aA+BR+B,EAAkB,WAC3B,OAAO3B,MAAM0B,EAAiB,CAC1BvB,YAAa,YACdI,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,OACT,MAAMC,MAAM,6BAGhB,OAAOF,EAASG,WAIlBiB,EAAsB,UAAMhC,EAAN,mBAEfiC,EAAqB,WAC9B,OAAO7B,MAAM4B,EAAwB,CACjCzB,YAAa,YACdI,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,OACT,MAAMC,MAAM,gCAGhB,OAAOF,EAASG,W,OCzDTmB,E,4MAjFXC,MAAQ,CACJC,cAAc,G,EAGlBC,aAAe,WAEX,EAAKC,SAAS,CACVF,cAAc,K,EAItBG,cAAgB,WAEZ,EAAKD,SAAS,CACVF,cAAc,K,EAGtBI,SAAW,SAACrC,GAGRD,EAAMC,GACDQ,MAAK,SAACR,GAEH,EAAKmC,SAAS,CACVF,cAAc,IAGlBK,IAAQC,QAAR,wBAAiCvC,EAAKwC,OACtC,EAAKC,MAAMC,eACZC,OAAM,SAACC,GACVN,IAAQO,MAAMD,EAAIN,a,EAG1BQ,OAAS,WACL,OAEI,cADA,CACA,iBACI,cAAC,IAAD,CAAQC,MAAM,QAAQC,QAAS,EAAKZ,cAAea,MAAO,CAAEC,YAAa,QAAzE,mBAEA,cAAC,IAAD,CACIC,MAAM,SACNC,QAAS,EAAKpB,MAAMC,aACpBoB,SAAU,EAAKnB,aACfoB,OAAQ,KACRC,gBAAgB,EALpB,SAOI,eAAC,IAAD,CAEIf,KAAK,eACLH,SAAU,EAAKA,SACfmB,UAAU,EAJd,UAMI,cAAC,IAAKC,KAAN,CACIjB,KAAK,UACLkB,MAAO,CAAC,CAAEC,UAAU,EAAMrB,QAAS,gCAFvC,SAII,cAAC,IAAD,CAAOsB,OAAQ,cAACC,EAAA,EAAD,IAAkBC,YAAY,eAEjD,cAAC,IAAKL,KAAN,CACIjB,KAAK,WACLkB,MAAO,CAAC,CAAEC,UAAU,EAAMrB,QAAS,gCAFvC,SAII,cAAC,IAAD,CACIsB,OAAQ,cAACG,EAAA,EAAD,IACRD,YAAY,eAIpB,cAAC,IAAKL,KAAN,UAEI,eAAC,IAAD,CAAQO,KAAK,UAAUC,SAAS,SAAhC,qC,YAvERC,IAAMC,WC4FXC,E,4MA3FXpC,MAAQ,CACJC,cAAc,G,EAGlBC,aAAe,WACX,EAAKC,SAAS,CACVF,cAAc,K,EAItBoC,cAAgB,WACZ,EAAKlC,SAAS,CACVF,cAAc,K,EAItBI,SAAW,SAACrC,GACRc,EAASd,GACJQ,MAAK,WACF,EAAK2B,SAAS,CAEVF,cAAc,IAElBK,IAAQC,QAAR,6BAEHI,OAAM,SAACC,GACRN,IAAQO,MAAMD,EAAIN,a,EAI1BQ,OAAS,WACL,OACI,gCACI,cAAC,IAAD,CAAQC,MAAM,QAAQiB,KAAK,UAAUhB,QAAS,EAAKqB,cAAnD,sBAEA,cAAC,IAAD,CACIlB,MAAM,WACNC,QAAS,EAAKpB,MAAMC,aACpBoB,SAAU,EAAKnB,aACfoB,OAAQ,KACRC,gBAAgB,EALpB,SAOI,eAAC,IAAD,CACIf,KAAK,kBACL8B,cAAe,CAAEC,UAAU,GAC3BlC,SAAU,EAAKA,SACfmB,UAAU,EAJd,UAMI,cAAC,IAAKC,KAAN,CACIjB,KAAK,UACLkB,MAAO,CAAC,CAAEC,UAAU,EAAMrB,QAAS,gCAFvC,SAII,cAAC,IAAD,CAAOsB,OAAQ,cAACC,EAAA,EAAD,IAAkBC,YAAY,eAEjD,cAAC,IAAKL,KAAN,CACIjB,KAAK,WACLkB,MAAO,CAAC,CAAEC,UAAU,EAAMrB,QAAS,gCAFvC,SAII,cAAC,IAAD,CACIsB,OAAQ,cAACG,EAAA,EAAD,IACRD,YAAY,eAGpB,cAAC,IAAKL,KAAN,CACIjB,KAAK,aACLkB,MAAO,CAAC,CAAEC,UAAU,EAAMrB,QAAS,iCAFvC,SAII,cAAC,IAAD,CACIwB,YAAY,gBAGpB,cAAC,IAAKL,KAAN,CACIjB,KAAK,YACLkB,MAAO,CAAC,CAAEC,UAAU,EAAMrB,QAAS,gCAFvC,SAII,cAAC,IAAD,CACIwB,YAAY,eAIpB,cAAC,IAAKL,KAAN,UACI,cAAC,IAAD,CAAQO,KAAK,UAAUC,SAAS,SAAhC,iC,YAlFLC,IAAMC,W,6CCDrBK,EAAYC,IAAZD,QAEFE,EACO,UADPA,EAEM,SAFNA,EAGK,QAsGIC,E,4MAnGX3C,MAAQ,CACJ4C,eAAe,G,EAGnBC,cAAgB,WACZ,EAAK1C,SAAS,CACVyC,eAAe,K,EAIvBE,gBAAkB,WACd,EAAK3C,SAAS,CACVyC,eAAe,K,EAqBvB9B,OAAS,WACL,MAAgC,EAAKL,MAAMzC,KAAnC+E,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,KAEvB,OACI,qCACI,cAAC,IAAD,CAAQjB,KAAK,UAAUjB,MAAM,QAAQC,QAAS,EAAK8B,gBAAiBI,KAAM,cAACC,EAAA,EAAD,IAA1E,0BAEA,cAAC,IAAD,CACIhC,MAAM,eACNiC,UAAU,QACVC,MAAO,IACPjC,QAAS,EAAKpB,MAAM4C,cACpBU,QAAS,EAAKT,cALlB,SAOI,eAAC,IAAD,CACIU,KAAK,SACLC,gBAAiB,CAACd,GAClBzB,MAAO,CAAEwC,OAAQ,OAAQC,YAAa,GACtCC,YAAY,EAJhB,UAMI,cAACnB,EAAD,CAA+BU,KAAM,cAACU,EAAA,EAAD,IAAiBzC,MAAM,UAA5D,SAEQ6B,EAAOa,KAAI,SAACC,GACR,OACI,cAAC,IAAKrC,KAAN,UACI,mBAAGsC,KAAMD,EAAKE,IAAKC,OAAO,SAASC,IAAI,sBAAvC,mBACQJ,EAAKK,iBADb,cACmCL,EAAK3C,UAF5B2C,EAAKpE,QAJvBgD,GAad,cAACF,EAAD,CAA8BU,KAAM,cAACkB,EAAA,EAAD,IAAqBjD,MAAM,SAA/D,SAEQ4B,EAAMc,KAAI,SAACC,GACP,OACI,cAAC,IAAKrC,KAAN,UACI,mBAAGsC,KAAMD,EAAKE,IAAKC,OAAO,SAASC,IAAI,sBAAvC,mBACQJ,EAAKK,iBADb,cACmCL,EAAK3C,UAF5B2C,EAAKpE,QAJvBgD,GAad,cAACF,EAAD,CAA6BU,KAAM,cAACmB,EAAA,EAAD,IAAyBlD,MAAM,QAAlE,SAEQ8B,EAAKY,KAAI,SAACC,GACN,OACI,cAAC,IAAKrC,KAAN,UACI,mBAAGsC,KAAMD,EAAKE,IAAKC,OAAO,SAASC,IAAI,sBAAvC,mBACQJ,EAAKK,iBADb,cACmCL,EAAK3C,UAF5B2C,EAAKpE,QAJvBgD,Y,YAhFdR,IAAMC,W,2BC2DfmC,G,4MA/DXtE,MAAQ,CACJC,cAAc,G,EAGlBC,aAAe,WACX,EAAKC,SAAS,CACVF,cAAc,K,EAItBsE,cAAgB,WACZ,EAAKpE,SAAS,CACVF,cAAc,K,EAItBuE,SAAW,SAACxG,GACRuB,EAAiBvB,EAAKyG,WACjBjG,MAAK,SAACR,GACH,EAAKmC,SAAS,CACVF,cAAc,IAElB,EAAKQ,MAAMC,UAAU1C,MAExB2C,OAAM,SAACC,GACJN,IAAQO,MAAMD,EAAIN,a,EAI9BQ,OAAS,WACL,OACI,gCACI,cAAC,IAAD,CAAQC,MAAM,QAAQC,QAAS,EAAKuD,cAAerB,KAAM,cAACwB,EAAA,EAAD,IAAoBzD,MAAO,CAAE0D,WAAY,OAAQC,UAAW,QAArH,4BAEA,cAAC,IAAD,CACIzD,MAAM,SACNC,QAAS,EAAKpB,MAAMC,aACpBoB,SAAU,EAAKnB,aACfoB,OAAQ,KAJZ,SAMI,eAAC,IAAD,CACId,KAAK,gBACLH,SAAU,EAAKmE,SAFnB,UAII,cAAC,IAAK/C,KAAN,CACIjB,KAAK,YACLkB,MAAO,CAAC,CAAEC,UAAU,EAAMrB,QAAS,6BAFvC,SAII,cAAC,IAAD,CAAOwB,YAAY,gBAGvB,cAAC,IAAKL,KAAN,UACI,cAAC,IAAD,CAAQO,KAAK,UAAUC,SAAS,SAAhC,+B,YAtDDC,IAAMC,W,uECAzB0C,GAAYC,KAAZD,QACFE,GACO,SADPA,GAEM,SAFNA,GAGK,QASLC,GAAkB,SAAClB,EAAMmB,EAAUC,EAAMC,GAC3C,IAAMhE,EAAK,UAAM2C,EAAKK,iBAAX,cAAiCL,EAAK3C,OAE3CiE,EAAQF,EAAKG,MAAK,SAACC,GAAD,OAASA,EAAI5F,KAAOoE,EAAKpE,MAoBjD,OACI,qCAEQuF,GACA,cAAC,KAAD,CAAS9D,MAAOiE,EAAQ,4BAA8B,uBAAtD,SACI,cAAC,IAAD,CAAQrE,MAAM,SAASmC,KAAMkC,EAAQ,cAACjC,EAAA,EAAD,IAAiB,cAACoC,GAAA,EAAD,IAAkBvE,QAvBrE,WLoFW,IAACwE,EKnFvBJ,GLmFuBI,EKlFJ1B,ELmFpB7F,MAAM0B,EAAiB,CAC1BzB,OAAQ,SACRC,QAAS,CACL,eAAgB,oBAEpBC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAEkH,SAAUD,MAClChH,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,OACT,MAAMC,MAAM,oCK5FaH,MAAK,WAC1B2G,OACDxE,OAAM,SAAAC,GACLN,IAAQO,MAAMD,EAAIN,YLiEH,SAACkF,GAC5B,OAAOvH,MAAM0B,EAAiB,CAC1BzB,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAACkH,SAAUD,MACjChH,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,OACT,MAAMC,MAAM,gCKrEhB+G,CAAgB5B,GAAMtF,MAAK,WACvB2G,OACDxE,OAAM,SAAAC,GACLN,IAAQO,MAAMD,EAAIN,iBAYlB,qBAAKW,MAAO,CAAE0E,SAAU,SAAUC,aAAc,WAAYvC,MAAO,KAAnE,SACI,cAAC,KAAD,CAASlC,MAAOA,EAAhB,SACI,+BAAOA,YAOrB0E,GAAiB,SAAC7H,EAAMiH,EAAUC,EAAMC,GAC1C,OACI,cAAC,KAAD,CACIW,KAAM,CACFC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAERC,WAAYpI,EACZqI,WAAY,SAAAvC,GAAI,OACZ,cAAC,KAAKrC,KAAN,CAAWR,MAAO,CAAEC,YAAa,QAAjC,SACI,cAAC,KAAD,CACIC,MAAO6D,GAAgBlB,EAAMmB,EAAUC,EAAMC,GADjD,SAGI,mBAAGpB,KAAMD,EAAKE,IAAKC,OAAO,SAASC,IAAI,sBAAvC,SACI,qBACIoC,IAAI,cACJC,KAjEZvC,EAiE4BF,EAAK0C,cAjEzBxC,EACvByC,QAAQ,YAAa,OACrBA,QAAQ,WAAY,OACpBA,QAAQ,WAAY,OACpBA,QAAQ,UAAW,gBAJL,IAACzC,MAgGL0C,GArBF,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,UAAW1B,EAAgD,EAAhDA,SAAU2B,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBACxC9D,EAAwB4D,EAAxB5D,MAAOC,EAAiB2D,EAAjB3D,OAAQC,EAAS0D,EAAT1D,KACR6D,EAAiDF,EAAxD7D,MAA0BgE,EAA8BH,EAAtC5D,OAA0BgE,EAAYJ,EAAlB3D,KAE9C,OACI,eAAC,KAAD,CACIgE,iBAAkBlC,GADtB,UAGI,cAACF,GAAD,CAASqC,IAAI,UAAgCjG,MAAO,CAAEwC,OAAQ,QAASkC,SAAU,QAAUwB,aAAa,EAAxG,SACKtB,GAAe7C,EAAQiC,EAAU8B,EAAYF,IADtB9B,IAG5B,cAACF,GAAD,CAASqC,IAAI,SAA8BjG,MAAO,CAAEwC,OAAQ,QAASkC,SAAU,QAAUwB,aAAa,EAAtG,SACKtB,GAAe9C,EAAOkC,EAAU6B,EAAWD,IADrB9B,IAG3B,cAACF,GAAD,CAASqC,IAAI,QAA4BjG,MAAO,CAAEwC,OAAQ,QAASkC,SAAU,QAAUwB,aAAa,EAApG,SACKtB,GAAe5C,EAAMgC,EAAU+B,EAAUH,IADpB9B,QC1F9BqC,GAA2BC,IAA3BD,OAAQE,GAAmBD,IAAnBC,QAASC,GAAUF,IAAVE,MAsLVC,G,4MAnLXxH,MAAQ,CACJiF,UAAU,EACVwC,SAAU,GACVd,UAAW,CACP5D,MAAO,GACPC,OAAQ,GACRC,KAAM,IAEV2D,cAAe,CACX7D,MAAO,GACPC,OAAQ,GACRC,KAAM,K,EAGd4D,iBAAmB,WACfjH,IAAkBpB,MAAK,SAACR,GACpB,EAAKmC,SAAS,CACVyG,cAAe5I,EACfiH,UAAU,OAEftE,OAAM,SAACC,GACNN,IAAQO,MAAMD,EAAIN,a,EAI1BoH,aAAe,YAAc,IAAXC,EAAU,EAAVA,IACF,mBAARA,EAUJtI,EAAesI,GAAKnJ,MAAK,SAACR,GACtB,EAAKmC,SAAS,CACVwG,UAAW3I,OAXf8B,IAAqBtB,MAAK,SAACR,GACvB,EAAKmC,SAAS,CACVwG,UAAW3I,Q,EAc3B4J,sBAAwB,SAAC5J,GACrB,EAAKmC,SAAS,CACVwG,UAAW3I,K,EAInB6J,gBAAkB,WACdjI,IAAkBpB,MAAK,SAACR,GACpB,EAAKmC,SAAS,CACVyG,cAAe5I,EACfiH,UAAU,OAEftE,OAAM,SAACC,GACNN,IAAQO,MAAMD,EAAIN,a,EAI1BwH,eAAiB,WACb9I,IACKR,MAAK,WACF,EAAK2B,SAAS,CACV8E,UAAU,IAEd3E,IAAQC,QAAR,6BACDI,OAAM,SAACC,GACVN,IAAQO,MAAMD,EAAIN,a,EAK1ByH,kBAAoB,WAEhB7I,IACKV,MAAK,SAACR,GAEH,EAAKmC,SAAS,CACVsH,SAAUzJ,OAGjB2C,OAAM,SAACC,GACJN,IAAQO,MAAMD,EAAIN,a,EAI9BQ,OAAS,kBACL,eAAC,IAAD,WACI,cAACsG,GAAD,UACI,eAAC,IAAD,CAAKY,QAAQ,gBAAb,UACI,cAAC,IAAD,UAEQ,EAAKhI,MAAMiF,UACX,cAAC,EAAD,CAAWjH,KAAM,EAAKgC,MAAM4G,kBAGpC,cAAC,IAAD,UAEQ,EAAK5G,MAAMiF,SACP,cAAC,IAAD,CAAQlE,MAAM,QAAQC,QAAS,EAAK8G,eAApC,oBAGI,sBAAK7G,MAAO,CAACgH,QAAS,QAAtB,UACI,cAAC,EAAD,CAAOvH,UAAW,EAAKmH,kBACvB,cAAC,EAAD,cAqB5B,eAAC,IAAD,WACI,eAACN,GAAD,CAAOlE,MAAO,IAAK6E,UAAU,yBAA7B,UACI,cAAC,GAAD,CAAcxH,UAAW,EAAKkH,wBAC9B,eAAC,IAAD,CACIrE,KAAK,SACL4E,SAAU,EAAKT,aACfzG,MAAO,CAAE2D,UAAW,QAHxB,UAKI,cAAC,IAAKnD,KAAN,CAAWyB,KAAM,cAACkF,EAAA,EAAD,IAAjB,+BAAuC,kBAEvC,cAAC,KAAD,CAASlF,KAAM,cAACmF,EAAA,EAAD,IAAsClH,MAAM,gBAAgB+G,UAAU,qBAArF,SAEQ,EAAKlI,MAAMyH,SAAS5D,KAAI,SAACyE,GACrB,OACI,eAAC,IAAK7G,KAAN,CAAyBR,MAAO,CAAEwC,OAAQ,QAA1C,UACI,qBACI6C,IAAI,cACJC,IAAK+B,EAAKC,YAAY9B,QAAQ,WAAY,MAAMA,QAAQ,UAAW,MACnExF,MAAO,CAAEuH,aAAc,MAAOtH,YAAa,UAE/C,+BACnBoH,EAAK9H,SAP0B8H,EAAK5I,QAJA,uBAoB7C,cAAC,IAAD,CAAQuB,MAAO,CAAEwH,QAAS,QAA1B,SACI,cAACnB,GAAD,CACIY,UAAU,yBACVjH,MAAO,CACHwH,QAAS,GACTC,OAAQ,EACRjF,OAAQ,IACRkC,SAAU,QANlB,SASI,cAAC,GAAD,CACIgB,UAAW,EAAK3G,MAAM2G,UACtB1B,SAAU,EAAKjF,MAAMiF,SACrB2B,cAAe,EAAK5G,MAAM4G,cAC1BC,iBAAkB,EAAKA,8B,YA3KjC3E,IAAMC,WCDTwG,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrK,MAAK,YAAkD,IAA/CsK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASrI,OACL,cAAC,GAAD,IACFsI,SAASC,eAAe,SAM1BV,O","file":"static/js/main.bf7278cc.chunk.js","sourcesContent":["const SERVER_ORIGIN = '';//上传到云端的url--public\n\nconst loginUrl = `${SERVER_ORIGIN}/login`;\n\nexport const login = (data) => {\n    //credential == username + password\n    return fetch(loginUrl, {//向后端发送请求 xml request 另外一种解决方案\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',//发cookie same origin\n        body: JSON.stringify(data)\n    }).then((response) => {//fetch 结果返回出去\n\n        if (response.status !== 200) {\n            throw Error('Fail to log in');\n        }\n\n        return response.json();\n    })\n}\nconst registerUrl = `${SERVER_ORIGIN}/register`;//string 拼接\nexport const register = (data) => {//向外暴露register api\n    return fetch (registerUrl,{//发送request\n        method:'POST',\n        headers:{\n            'Content-Type': 'application/json',\n        },\n        body:JSON.stringify(data)\n    }).then((response)=>{\n        if(response.status !== 200){\n            throw Error('Fail to Register')\n        }\n    })\n}\nconst logoutUrl = `${SERVER_ORIGIN}/logout`;\n\nexport const logout = () => {\n    return fetch(logoutUrl, {\n        method: 'POST',\n        credentials: 'include',\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to log out');\n        }\n    })\n}\nconst topGamesUrl = `${SERVER_ORIGIN}/game`;\n\nexport const getTopGames = () => {\n    return fetch(topGamesUrl).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get top games');\n        }\n\n        return response.json();\n    })\n}\n\nconst getGameDetailsUrl = `${SERVER_ORIGIN}/game?game_name=`;\n\nconst getGameDetails = (gameName) => {\n    return fetch(`${getGameDetailsUrl}${gameName}`).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to find the game');\n        }\n\n        return response.json();\n    });\n}\nconst searchGameByIdUrl = `${SERVER_ORIGIN}/search?game_id=`;\n\nexport const searchGameById = (gameId) => {\n    return fetch(`${searchGameByIdUrl}${gameId}`).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to find the game');\n        }\n        return response.json();\n    })\n}\nexport const searchGameByName = (gameName) => {\n    return getGameDetails(gameName).then((data) => {\n        if (data && data.id) {\n            return searchGameById(data.id);\n        }\n\n        throw Error('Fail to find the game')\n    })\n}\n\nconst favoriteItemUrl = `${SERVER_ORIGIN}/favorite`;\n\nexport const addFavoriteItem = (favItem) => {\n    return fetch(favoriteItemUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({favorite: favItem})\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to add favorite item');\n        }\n    })\n}\nexport const deleteFavoriteItem = (favItem) => {\n    return fetch(favoriteItemUrl, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ favorite: favItem })\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to delete favorite item');\n        }\n    })\n}\n\nexport const getFavoriteItem = () => {\n    return fetch(favoriteItemUrl, {\n        credentials: 'include',\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get favorite item');\n        }\n\n        return response.json();\n    })\n}\n\nconst getRecommendedItemsUrl = `${SERVER_ORIGIN}/recommendation`;\n\nexport const getRecommendations = () => {\n    return fetch(getRecommendedItemsUrl, {\n        credentials: 'include',\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get recommended item');\n        }\n\n        return response.json();\n    })\n}\n","import { Button, Form, Input, message, Modal } from 'antd';\nimport React from 'react';\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { login } from '../utils';\n\nclass Login extends React.Component {\n    state = {\n        displayModal: false//初显示：false，点击后显示\n    }\n\n    handleCancel = () => {\n        //displayModel =>true\n        this.setState({\n            displayModal: false,\n        })\n    }\n\n    signinOnClick = () => {\n        //displayModel =>true\n        this.setState({\n            displayModal: true,\n        })\n    }\n    onFinish = (data) => {\n        //1.collect username / password from the form\n        //2.send data to the server\n        login(data)\n            .then((data) => {\n                //choose the model\n                this.setState({\n                    displayModal: false,\n                    //inform app the status of login\n                })\n                message.success(`Welcome back, ${data.name}`);\n                this.props.onSuccess();\n            }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n    render = () => {\n        return (\n            //                                                           两个组件之间margin\n            <div>\n                <Button shape=\"round\" onClick={this.signinOnClick} style={{ marginRight: '20px' }}>\n                    Login</Button>\n                <Modal\n                    title=\"Log in\"\n                    visible={this.state.displayModal}//state rerender\n                    onCancel={this.handleCancel}//点击区域外自动关掉弹窗\n                    footer={null}//没有 footer\n                    destroyOnClose={true}\n                >\n                    <Form\n                        //prederve keep field value\n                        name=\"normal_login\"\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"user_id\"\n                            rules={[{ required: true, message: 'Please input your Username!' }]}\n                        >\n                            <Input prefix={<UserOutlined />} placeholder=\"Username\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[{ required: true, message: 'Please input your Password!' }]}\n                        >\n                            <Input\n                                prefix={<LockOutlined />}\n                                placeholder=\"Password\"\n                            />\n                        </Form.Item>\n\n                        <Form.Item>\n\n                            <Button type=\"primary\" htmlType=\"submit\">  {/*submit 和 onfinish 绑定触发*/}\n                                Login</Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n}\n\n\nexport default Login;","import { Button, Form, Input, message, Modal } from 'antd';\nimport React from 'react';\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { register } from '../utils';\n\nclass Register extends React.Component {\n    state = {\n        displayModal: false\n    }\n\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        })\n    }\n\n    signupOnClick = () => {\n        this.setState({\n            displayModal: true,\n        })\n    }\n\n    onFinish = (data) => {\n        register(data)\n            .then(() => {\n                this.setState({\n                    //close the model\n                    displayModal: false,\n                })\n                message.success(`Successfully signed up`);\n            })\n            .catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    render = () => {\n        return (\n            <div>\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\n                    Register</Button>\n                <Modal\n                    title=\"Register\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    destroyOnClose={true}\n                >\n                    <Form\n                        name=\"normal_register\"\n                        initialValues={{ remember: true }}\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"user_id\"\n                            rules={[{ required: true, message: 'Please input your Username!' }]}\n                        >\n                            <Input prefix={<UserOutlined />} placeholder=\"Username\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[{ required: true, message: 'Please input your Password!' }]}\n                        >\n                            <Input\n                                prefix={<LockOutlined />}\n                                placeholder=\"Password\"\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"first_name\"\n                            rules={[{ required: true, message: 'Please input your Firstname!' }]}\n                        >\n                            <Input\n                                placeholder=\"firstname\"\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"last_name\"\n                            rules={[{ required: true, message: 'Please input your Lastname!' }]}\n                        >\n                            <Input\n                                placeholder=\"lastname\"\n                            />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Register</Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default Register;\n","import React from 'react';\nimport { Menu, Button, Drawer } from 'antd';\nimport { EyeOutlined, YoutubeOutlined, VideoCameraOutlined, StarFilled } from '@ant-design/icons';\n\nconst { SubMenu } = Menu;\n\nconst MenuKey = {//显示menu里的选项title\n    Streams: 'streams',\n    Videos: 'videos',\n    Clips: 'clips'\n}\nclass Favorites extends React.Component {\n    state = {\n        displayDrawer: false,\n    }\n\n    onDrawerClose = () => {\n        this.setState({\n            displayDrawer: false,\n        })\n    }\n\n    onFavoriteClick = () => {\n        this.setState({\n            displayDrawer: true,\n        })\n    }\n\n    // onFavoriteClick = () => {\n    //     //1.get favorite items\n    //     //2.set displayDrawer to be true\n    //     getFavoriteItem()//util\n    //         .then((data) => {\n    //             console.log(data)\n    //             this.setState({\n    //                 data,\n    //                 displayDrawer: true,\n    //             })\n    //         }).catch((err) => {\n    //         message.error(err.message);\n    //     })\n    // }\n\n/*key是给diff算法用的，共用一个parent*/\n\n    render = () => {\n        const { VIDEO, STREAM, CLIP } = this.props.data;\n\n        return (\n            <>\n                <Button type=\"primary\" shape=\"round\" onClick={this.onFavoriteClick} icon={<StarFilled />}>\n                    My Favorites</Button>\n                <Drawer\n                    title=\"My Favorites\"\n                    placement=\"right\"\n                    width={720}\n                    visible={this.state.displayDrawer}\n                    onClose={this.onDrawerClose}\n                >\n                    <Menu\n                        mode=\"inline\"\n                        defaultOpenKeys={[MenuKey.Streams]}\n                        style={{ height: '100%', borderRight: 0 }}\n                        selectable={false}\n                    >\n                        <SubMenu key={MenuKey.Streams} icon={<EyeOutlined />} title=\"Streams\">\n                            {\n                                STREAM.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                        <SubMenu key={MenuKey.Videos} icon={<YoutubeOutlined />} title=\"Videos\">\n                            {\n                                VIDEO.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                        <SubMenu key={MenuKey.Clips} icon={<VideoCameraOutlined />} title=\"Clips\">\n                            {\n                                CLIP.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                    </Menu>\n                </Drawer>\n            </>\n        )\n    }\n}\n\nexport default Favorites;\n","import React from 'react';\nimport { Button, Form, Input, message, Modal } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { searchGameByName } from '../utils';\n\nclass CustomSearch extends React.Component {\n    //flag：控制model开关\n    state = {\n        displayModal: false\n    }\n\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        })\n    }\n\n    searchOnClick = () => {\n        this.setState({\n            displayModal: true,\n        })\n    }\n\n    onSubmit = (data) => {\n        searchGameByName(data.game_name)\n            .then((data) => {\n                this.setState({\n                    displayModal: false,\n                })\n                this.props.onSuccess(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    render = () => {\n        return (\n            <div>\n                <Button shape=\"round\" onClick={this.searchOnClick} icon={<SearchOutlined />} style={{ marginLeft: '20px', marginTop: '20px'}}>\n                    Custom Search </Button>\n                <Modal\n                    title=\"Search\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                >\n                    <Form\n                        name=\"custom_search\"\n                        onFinish={this.onSubmit}\n                    >\n                        <Form.Item\n                            name=\"game_name\"\n                            rules={[{ required: true, message: 'Please enter a game name' }]}\n                        >\n                            <Input placeholder=\"Game name\" />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Search</Button>\n                            {/*type:submit,绑定on finish*/}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default CustomSearch;\n","import React from 'react';\nimport { Button, Card, List, message, Tabs, Tooltip } from 'antd';\nimport { StarOutlined, StarFilled } from '@ant-design/icons';\nimport { addFavoriteItem, deleteFavoriteItem } from '../utils';\n\nconst { TabPane } = Tabs;\nconst tabKeys = {\n    Streams: 'stream',\n    Videos: 'videos',\n    Clips: 'clips',\n}\n\nconst processUrl = (url) => url\n    .replace('%{height}', '252')\n    .replace('%{width}', '480')\n    .replace('{height}', '252')\n    .replace('{width}', '480');\n\nconst renderCardTitle = (item, loggedIn, favs, favOnChange) => {\n    const title = `${item.broadcaster_name} - ${item.title}`;\n\n    const isFav = favs.find((fav) => fav.id === item.id);\n\n    const favOnClick = () => {\n        if (isFav) {\n            deleteFavoriteItem(item).then(() => {\n                favOnChange();\n            }).catch(err => {\n                message.error(err.message)\n            })\n\n            return;\n        }\n\n        addFavoriteItem(item).then(() => {\n            favOnChange();\n        }).catch(err => {\n            message.error(err.message)\n        })\n    }\n\n    return (\n        <>\n            {\n                loggedIn &&\n                <Tooltip title={isFav ? \"Remove from favorite list\" : \"Add to favorite list\"}>\n                    <Button shape=\"circle\" icon={isFav ? <StarFilled /> : <StarOutlined />} onClick={favOnClick} />\n                </Tooltip>\n            }\n            <div style={{ overflow: 'hidden', textOverflow: 'ellipsis', width: 450 }}>\n                <Tooltip title={title}>\n                    <span>{title}</span>\n                </Tooltip>\n            </div>\n        </>\n    )\n}\n\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\n    return (\n        <List\n            grid={{\n                xs: 1,\n                sm: 2,\n                md: 4,\n                lg: 4,\n                xl: 6,\n            }}\n            dataSource={data}\n            renderItem={item => (\n                <List.Item style={{ marginRight: '20px' }}>\n                    <Card\n                        title={renderCardTitle(item, loggedIn, favs, favOnChange)}\n                    >\n                        <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img\n                                alt=\"Placeholder\"\n                                src={processUrl(item.thumbnail_url)}\n                            />\n                        </a>\n                    </Card>\n                </List.Item>\n            )}\n        />\n    )\n}\n\nconst Home = ({ resources, loggedIn, favoriteItems, favoriteOnChange }) => {\n    const { VIDEO, STREAM, CLIP } = resources;\n    const { VIDEO: favVideos, STREAM: favStreams, CLIP: favClips} = favoriteItems;\n\n    return (\n        <Tabs\n            defaultActiveKey={tabKeys.Streams}\n        >\n            <TabPane tab=\"Streams\" key={tabKeys.Streams} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n                {renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)}\n            </TabPane>\n            <TabPane tab=\"Videos\" key={tabKeys.Videos} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n                {renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)}\n            </TabPane>\n            <TabPane tab=\"Clips\" key={tabKeys.Clips} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n                {renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)}\n            </TabPane>\n        </Tabs>\n    );\n}\n\nexport default Home;\n\n","import React from 'react';\nimport { Button, Col, Layout, Menu, message, Row } from 'antd';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { getFavoriteItem, getRecommendations, getTopGames, logout, searchGameById } from './utils';\nimport Favorites from './components/Favorites';\nimport { LikeOutlined, FireOutlined } from '@ant-design/icons';\nimport CustomSearch from './components/CustomSearch';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport Home from './components/Home';\n\nconst { Header, Content, Sider } = Layout;\n\nclass App extends React.Component {\n    state = {\n        loggedIn: false,\n        topGames: [],\n        resources: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: [],\n        },\n        favoriteItems: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: [],\n        },\n    }\n    favoriteOnChange = () => {\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    onGameSelect = ({ key }) => {\n        if (key === 'Recommendation') {\n            getRecommendations().then((data) => {\n                this.setState({\n                    resources: data,\n                })\n            })\n\n            return;\n        }\n\n        searchGameById(key).then((data) => {\n            this.setState({\n                resources: data,\n            })\n        })\n    }\n\n    customSearchOnSuccess = (data) => {\n        this.setState({\n            resources: data,\n        })\n    }\n\n    signinOnSuccess = () => {\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    signoutOnClick = () => {\n        logout()\n            .then(() => {\n                this.setState({\n                    loggedIn: false\n                })\n                message.success(`Successfull signed out`);\n            }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n//组件创建阶段调用，render之后调用\n    componentDidMount = () => {\n        //fetch top games the form server（向后端拿数据）\n        getTopGames()\n            .then((data) => {\n                //render top games\n                this.setState({\n                    topGames: data\n                })\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    render = () => (\n        <Layout>\n            <Header>\n                <Row justify=\"space-between\">\n                    <Col>\n                        {//如果登陆才显示favorities\n                            this.state.loggedIn &&\n                            <Favorites data={this.state.favoriteItems} />\n                        }\n                    </Col>\n                    <Col>\n                        {\n                            this.state.loggedIn ?\n                                <Button shape=\"round\" onClick={this.signoutOnClick}>\n                                    Logout</Button> :\n                                (\n                                    <div style={{display: \"flex\"}}>\n                                        <Login onSuccess={this.signinOnSuccess} />\n                                        <Register />\n                                    </div>\n                                )\n                        }\n                    </Col>\n                </Row>\n                {/*    {*/}\n                {/*    //case1: user already logged in,只显示log out 按钮*/}\n                {/*    //case2: user has not logged in，显示log in和register按钮*/}\n                {/*    this.state.loggedIn ?*/}\n                {/*        <Button shape=\"round\" onClick={this.signoutOnClick}>*/}\n                {/*            Logout</Button> :*/}\n                {/*        (*/}\n                {/*            <div style={{display: \"flex\"}}>*/}\n                {/*                <Login onSuccess={this.signinOnSuccess} />*/}\n                {/*                <Register />*/}\n                {/*            </div>*/}\n                {/*        )*/}\n\n                {/*}*/}\n            </Header>\n            <Layout>\n                <Sider width={300} className=\"site-layout-background\">\n                    <CustomSearch onSuccess={this.customSearchOnSuccess} />\n                    <Menu\n                        mode=\"inline\"\n                        onSelect={this.onGameSelect}\n                        style={{ marginTop: '10px' }}\n                    >\n                        <Menu.Item icon={<LikeOutlined />} key=\"Recommendation\">\n                            Recommend for you!</Menu.Item>\n                        <SubMenu icon={<FireOutlined />} key=\"Popular Games\" title=\"Popular Games\" className=\"site-top-game-list\">\n                            {\n                                this.state.topGames.map((game) => {\n                                    return (\n                                        <Menu.Item key={game.id} style={{ height: '50px' }}>\n                                            <img\n                                                alt=\"Placeholder\"\n                                                src={game.box_art_url.replace('{height}', '40').replace('{width}', '40')}\n                                                style={{ borderRadius: '50%', marginRight: '20px' }}\n                                            />\n                                            <span>\n                        {game.name}\n                      </span>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                    </Menu>\n                </Sider>\n                <Layout style={{ padding: '24px' }}>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{\n                            padding: 24,\n                            margin: 0,\n                            height: 800,\n                            overflow: 'auto'\n                        }}\n                    >\n                        <Home\n                            resources={this.state.resources}\n                            loggedIn={this.state.loggedIn}\n                            favoriteItems={this.state.favoriteItems}\n                            favoriteOnChange={this.favoriteOnChange}\n                        />\n                    </Content>\n                </Layout>\n            </Layout>\n        </Layout>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//root 调用app.js\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}